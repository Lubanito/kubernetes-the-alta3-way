#-------------------------------------------------------------------------
# Finish moving the certs we created on beachhead into the masters.

- name: Create k8s directories on masters
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - "/var/lib/etcd"
  - "/var/lib/kubernetes"
  become: yes

- name: Copy Certs and Config to Masters
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  loop: "{{ deployed_cert_and_config_files }}"
  become: yes

#----------------------------------------------------------------------------------------------------------
# BOOTSTRAPPING KUBERNETES 
# ---------------------------------------------------------------------------------------------------------   

# API Server Install
- name: Download the master service binaries
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.path }}"
    mode: "{{ item.mode }}"
  loop: "{{ master_services }}"
  loop_control: 
    label: "{{ item.display_name }} -> {{ item.path }}"
  become: yes

- name: Push the config files for the master services
  template:
    src: "{{ item.service_j2 }}"
    dest: "{{ item.service_path }}"
  loop: "{{ master_services }}"
  loop_control: 
    label: "{{ item.display_name }} -> {{ item.service_path }}"
  become: yes 

- name: Download Kubernetes kubectl 
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  loop:
   - url: "{{ kubectl.url }}"
     dest: "{{ kubectl.path }}"
     mode: '0755'
  become: yes    


# Bounce and enable kube services

- name: Reload systemd manager
  systemd: 
    daemon_reload: True
  become: yes
  
# TODO make this a handler
- name: Reload the daemon for the services
  service: 
    name: "{{ item.name }}"
    enabled: yes
    state: restarted
  loop: "{{ master_services }}"
  loop_control: 
    label: "{{ item.display_name }} Service -> {{ item.name }}"
  become: yes

- name: Allow Kubernetes API Server to fully initialize
  pause:
    seconds: 15

#-------------------------------------------------------------------------------------------
# RBAC setup
# TODO: I think rbac belongs on the beachhead role localhost, not run 3 times on each master --brfry
#-------------------------------------------------------------------------------------------

- name: Copy rbac cluster-role to masters
  copy:
    src: "{{ master_rbac_role.file }}"
    dest: "{{ master_rbac_role.path }}"
  become: yes

- name: Apply the RBAC rules
  shell: "kubectl apply -f {{ master_rbac_role.path }}"
  become: yes    

- name: Copy the cluster role bind file to the masters
  copy:
    src: "{{ master_rbac_rolebind.file }}"
    dest: "{{ master_rbac_rolebind.path }}"
  become: yes      

- name: Bind the clusterrole to the kubernetes user.
  shell: "kubectl apply -f {{ master_rbac_rolebind.path }}"
  become: yes

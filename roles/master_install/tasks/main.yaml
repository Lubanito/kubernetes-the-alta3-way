---
- hosts: localhost

  vars:
    k8s_config: "/home/student/k8s-config/encryption-config.yaml"
    certs: 
      pub:
        ca: "/home/student/k8s-certs/ca-key.pem"
        k8s: "/home/student/k8s-certs/kubernetes-key.pem"
      pri:
        ca: "/home/student/k8s-certs/ca.pem"
        k8s: "/home/student/k8s-certs/kubernetes-pem"


  tasks:

  - name: Create directories
    file: 
      path: "{{ item }}"
      state: directory
    with_items:
    - "/home/student/k8s-cert"
    - "/home/student/k8s-config"
    - "/etc/etcd"
    - "/var/lib/etcd"
    - "/var/lib/kubernetes"

  - name: Install dependencies with get_url, cfssl, cfssljson, kubectl
    get_url:
      url: {{ item.url }}
      dest: {{ item.dest }}
      mode: {{ item.mode }}
    with_items:
    - { url: "https://pkg.cfssl.org/R1.2/cfssl_linux-amd64", dest: /usr/local/bin/cfssl, mode: 0755 }
    - { url: "https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64", dest: /usr/local/bin/cfssljson, mode: 0755 }
    - { url: "https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl", dest: /usr/local/bin/kubectl, mode: 0755 }
    - { url: "https://alta3.com/static/projects/k8s/ca-config.json", dest: /home/student/ca-config.json, mode: 0777 }
    - { url: "https://alta3.com/static/projects/k8s/ca-csr.json", dest: /home/student/ca-csr.json, mode: 0777 }
    - { url: "https://alta3.com/static/projects/k8s/kubernetes-csr.json", dest: /home/student/k8s-certs/kubernetes-csr.json, mode: 0777 }
    - { url: "https://alta3.com/static/projects/k8s/encryption-config.yaml.j2", dest: /home/student/k8s-config/encryption-config.yaml.j2, mode: 0777 }
   
  - name: Generate a self-signed CA cert for the k8s cloud
    shell: cfssl gencert -initca ca-csr.json | cfssljson -bare ca
    args:
      chdir: "/home/student/k8s-certs"

  - name: Generate Certificate for k8s API server
    shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=172.16.3.1,172.16.1.5,172.16.1.6,172.16.1.7,127.0.0.1,kubernetes.default -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes
    args:
      chdir: "/home/student/k8s-certs"

  - name: Generate an encryption key
    shell: ENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)
    args:
      chdir: "/home/student/k8s-config"

  - name: Set the encryption key to ansible variable
    shell: echo $ENCRYPTION_KEY  
    register: encryption_key

  - name: Generate the encryption config file
    template: 
      src: "/home/student/k8s-config/encryption-config.yaml.j2"
      dest: "/home/student/k8s-config/encryption-config.yaml"

  - name: Copy Certs to etcd
    file: 
      src: {{ item.source }}
      dest: {{ item.dest }}
    with_items:
    - { source: /home/student/k8s-certs/ca.pem, dest: "/etc/etcd/ca.pem" }
    - { source: /home/student/k8s-certs/kubernetes.pem, dest: "/etc/etcd/kubernetes.pem" }
    - { source: /home/student/k8s-certs/kubernetes-key.pem, dest: "/etc/etcd/kubernetes-key.pem" }

  - name: Move Certs and Config to /var/lib/kubernetes
    command: mv /home/student/k8s-certs/ca.pem /home/student/k8s-certs/ca-key.pem /home/student/k8s-certs/kubernetes-key.pem /home/student/k8s-certs/kubernetes.pem /home/student/k8s-config/encryption-config.yaml /var/lib/kubernetes/


- hosts: masters

  include_vars: /home/student/k8s-ansible/vars

  tasks:

  - name: Create directories on masters
    file:
      path: {{ item }}
      state: directory
    with_items:
    - "/etc/etcd"
    - "/var/lib/etcd"

  - name: Copy Certs and Config to Masters
    file:
      src: {{ item.source }}
      dest: {{ item.dest }}
    with_items:
    - { source: /var/lib/kubernetes/encryption-config.yaml, dest: /home/student/encryption-config.yaml }
    - { source: /var/lib/kubernetes/ca.pem, dest: /home/student/ca.pem }
    - { source: /var/lib/kubernetes/ca-key.pem, dest: /home/student/ca-key.pem } 
    - { source: /var/lib/kubernetes/kubernetes.pem, dest: /home/student/kubernetes.pem }
    - { source: /var/lib/kubernetes/kubernetes-key.pem, dest: /home/student/kubernetes-key.pem }

  - name: Copy Certs and Config to Masters etcd
    file:
      src: {{ item.source }}
      dest: {{ item.dest }}
    with_items:
    - { source: /var/lib/kubernetes/kubernetes.pem, dest: /etc/etcd/kubernetes.pem }
    - { source: /var/lib/kubernetes/kubernetes-key.pem, dest: /etc/etcd/kubernetes-key.pem }
    become: true

  - name: Download the etcd binaries on each master
    get_url:
      url: {{ item.url }}
      dest: {{ item.dest }}
    with_items:
    - { url: "https://github.com/coreos/etcd/releases/download/v3.2.11/etcd-v3.2.11-linux-amd64.tar.gz", dest: /home/student }
        
  - name: Unpack the etcd binaries on each master
    unarchive:
      src: /home/student/etcd-v3.2.11-linux-amd64.tar.gz
      dest: /usr/local/bin
      

  - name: 

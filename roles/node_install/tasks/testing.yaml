#TODO: get rid of next 3 lines once working system
#  - set_fact:
#      reload: true
#    when: ({{ inventory_hostname }}_pem.stat.exists == false) or ({{ inventory_hostname }}_key_pem.stat.exists == false)


  - name: set the default kubeconfig to be kube-proxy.kubeconfig
    local_action: 
      module: shell kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
      args:
        chdir: "{{ k8sconfigdir }}" 
    become: yes
   # when: reload


#-----------------------------------------------------------------------------
# Node configuration - Generating client authentication config file (convert to k8s_raw and or command vs shell)
#-----------------------------------------------------------------------------

  - name: Chmod files to make them transferrable #TODO get these files in one place
    local_action:
      module:  file 
      path: "{{ item }}"
      mode: "0777"	
      #state: file
    with_items: 
    - "{{ k8sconfigdir }}/kube-proxy.kubeconfig"
    - "{{ k8sconfigdir }}/{{ inventory_hostname }}.kubeconfig"
    become: yes

  - name: Copy configuration files out to kubernetes nodes
    copy:
      src: "{{ item.source }}"
      dest: "{{ item.dest }}"
    with_items: 
    - { source: "{{ k8sconfigdir }}/kube-proxy.kubeconfig", dest: "/var/lib/kube-proxy/kubeconfig", mode: "0600" } #TODO what is the mode here?
    - { source: "{{ k8sconfigdir }}/{{ inventory_hostname }}.kubeconfig", dest: "/var/lib/kubelet/kubeconfig", mode: "0600" }
    become: yes


#/\/\/\/\/\/\/\/\/\//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
#-----------------------------------------------------------------------------
# Bootstrap Kubernetes Nodes
#-----------------------------------------------------------------------------
#/\/\/\/\/\/\/\/\/\//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\



#-----------------------------------------------------------------------------
# Installing OS Dependencies 
#-----------------------------------------------------------------------------

  - name: Install socat on the kubernetes nodes
    apt: 
      name: socat
      state: present
    become: yes

#-----------------------------------------------------------------------------
# Create Directories for Installation of Node Binaries 
#-----------------------------------------------------------------------------

  - name: Create the install directories
    file: 
      path: "{{ item }}"
      state: directory
      mode: "0750" 
    with_items: 
    - "/etc/cni/net.d/"
    - "/opt/cni/bin/"
    - "/var/lib/kubelet/"
    - "/var/lib/kube-proxy/"
    - "/var/lib/kubernetes/"
    - "/var/run/kubernetes/"
    become: yes

#-----------------------------------------------------------------------------
# Downloading and Installing Node Binaries 
#-----------------------------------------------------------------------------

  - name: Download the Node binaries
    get_url:
      url: "{{ item }}"
      dest: "/usr/local/bin/"
      mode: "0755"
    become: yes 
    with_items:
    - https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl
    - https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-proxy
    - https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubelet

  - name: Download Node binaries that are tarred
    get_url:
      url: "{{ item.url }}"
      dest: "{{ item.dest }}"
      #mode: "0755"
    with_items:
    - { url: "https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz", dest: "/opt/cni/bin/" }
    - { url: "https://github.com/containerd/cri-containerd/releases/download/v1.0.0-beta.1/cri-containerd-1.0.0-beta.1.linux-amd64.tar.gz", dest: "/" }
    become: yes 

  - name: unarchive the kubernetes binaries
    unarchive:
      remote_src: yes
      src: "{{ item.source }}"
      dest: "{{ item.dest }}"
    with_items:
    - { source: "/opt/cni/bin/cni-plugins-amd64-v0.6.0.tgz", dest: "/opt/cni/bin/" }
    - { source: "/cri-containerd-1.0.0-beta.1.linux-amd64.tar.gz", dest: "/" }
    become: yes


#/\/\/\/\/\/\/\/\/\\/\/\/\/\//\/\/\/\/\/\//\/\/\/\/\/\/\/\\/\/\/\/\/\/\/\/\/\/\
#-----------------------------------------------------------------------------
# Configure CNI Networking 
#-----------------------------------------------------------------------------
#/\/\/\/\/\/\/\/\/\\/\/\/\/\//\/\/\/\/\/\//\/\/\/\/\/\/\/\\/\/\/\/\/\/\/\/\/\/\

  - name: Create the 10-bridge.conf file for each node. Provides networking info for pods deployed to this node
    template:
      src: "{{ role_path }}/templates/10-bridge.conf.j2"
      dest: "/etc/cni/net.d/10-bridge.conf"
    become: yes

  - name: Create the 99-loopback.conf file for each node. 
    copy: 
      src: "{{ role_path }}/files/99-loopback.conf"
      dest: "/etc/cni/net.d"
    become: yes    

  - name: Create the pod-routes file for each node. Sets routes to get outbound connections from the calico network
    copy: 
      src: "{{role_path}}/files/{{ inventory_hostname }}-pod-routes"
      dest: "/etc/network/if-up.d/pod-routes"
      mode: "0755"
    become: yes


#-----------------------------------------------------------------------------
# Configure the Kubelet
#-----------------------------------------------------------------------------


  - name: Create the kubelet.service config file for each node
    template:
      src: "{{ item.source }}"
      dest: "{{ item.dest }}"
    with_items:    
    - { source: "{{ role_path }}/templates/kubelet.service.j2", dest: "/etc/systemd/system/kubelet.service" }
    - { source: "{{ role_path }}/templates/kube-proxy.service.j2", dest: "/etc/systemd/system/kube-proxy.service" }
    become: yes


#-----------------------------------------------------------------------------
# Start the Worker Services 
#-----------------------------------------------------------------------------

  - name: Do a reload of the daemons
    systemd: 
      daemon_reload: yes
    become: yes  

  - name: Enable the new services
    systemd:
      enabled: yes
      name: "{{ item }}"
    with_items:
    - "containerd"
    - "cri-containerd"
    - "kubelet"
    - "kube-proxy"
    become: yes

  - name: Start the services
    systemd: 
      state: restarted #TODO check if not having this set to started causes any havoc
      name: "{{ item }}"
    with_items:
    - "containerd"
    - "cri-containerd"
    - "kubelet"
    - "kube-proxy"
    become: yes





